[
  {
    "ContainingType": "MidAssignmentProject.WebAPI.Controllers.AuthController",
    "Method": "ActiveAccountAsync",
    "RelativePath": "api/auths/active-account/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.WebAPI.Controllers.AuthController",
    "Method": "LoginAsync",
    "RelativePath": "api/auths/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "MidAssignment.Application.Models.Requests.UserLoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.WebAPI.Controllers.AuthController",
    "Method": "LogoutAsync",
    "RelativePath": "api/auths/logout",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.WebAPI.Controllers.AuthController",
    "Method": "RefreshTokenAsync",
    "RelativePath": "api/auths/refresh-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "refreshTokenRequest",
        "Type": "MidAssignment.Application.Models.Requests.RefreshTokenRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.WebAPI.Controllers.AuthController",
    "Method": "RegisterAsync",
    "RelativePath": "api/auths/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "MidAssignment.Application.Models.Requests.UserRegisterRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.WebAPI.Controllers.AuthController",
    "Method": "RequestActiveAccountAsync",
    "RelativePath": "api/auths/request-active-account/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.WebAPI.Controllers.AuthController",
    "Method": "RequestResetPasswordAsync",
    "RelativePath": "api/auths/request-reset-password/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BookController",
    "Method": "CreateBook",
    "RelativePath": "api/books",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Author",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ReleaseYear",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Image",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "ImageUrl",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "CategoryId",
        "Type": "System.Nullable\u00601[[System.Int64, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "DaysForBorrow",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BookController",
    "Method": "GetBook",
    "RelativePath": "api/books/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BookController",
    "Method": "UpdateBook",
    "RelativePath": "api/books/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Author",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ReleaseYear",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Image",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "ImageUrl",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "CategoryId",
        "Type": "System.Nullable\u00601[[System.Int64, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "DaysForBorrow",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BookController",
    "Method": "DeleteBook",
    "RelativePath": "api/books/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BookController",
    "Method": "GetBooks",
    "RelativePath": "api/books/get-books",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Author",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ReleaseYearFrom",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "ReleaseYearTo",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "CategoryName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BookController",
    "Method": "GetNotBorrowedBooks",
    "RelativePath": "api/books/not-borrowed/{borrowingId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "borrowingId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BookController",
    "Method": "GetTop10NewsBook",
    "RelativePath": "api/books/top-news",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingDetailController",
    "Method": "CreateAsync",
    "RelativePath": "api/borrowing-details",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "System.Collections.Generic.List\u00601[[MidAssignment.Application.Models.Requests.BorrowingDetailRequest, MidAssignment.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingDetailController",
    "Method": "DeleteAsync",
    "RelativePath": "api/borrowing-details/{borrowingId}/{bookId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "borrowingId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "bookId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingDetailController",
    "Method": "GetBorrowingDetailsByBorrowingIdAsync",
    "RelativePath": "api/borrowing-details/borrowing/{borrowingId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "borrowingId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingDetailController",
    "Method": "HandleExtensionAsync",
    "RelativePath": "api/borrowing-details/handle-extension/{borrowingId}/{bookId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "borrowingId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "bookId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "MidAssignment.Application.Models.Requests.BorrowingDetailUpdateStatusExtendRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingDetailController",
    "Method": "GetBorrowingDetailsRequestExtend",
    "RelativePath": "api/borrowing-details/request-extend",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingDetailController",
    "Method": "UpdateStatusExtendAsync",
    "RelativePath": "api/borrowing-details/update-status-extend/{borrowingId}/{bookId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "borrowingId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "bookId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "MidAssignment.Application.Models.Requests.BorrowingDetailUpdateStatusExtendRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingDetailController",
    "Method": "UpdateStatusAsync",
    "RelativePath": "api/borrowing-details/update-status/{borrowingId}/{bookId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "borrowingId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "bookId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "MidAssignment.Application.Models.Requests.BorrowingDetailUpdateStatusRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingController",
    "Method": "CreateBorrowing",
    "RelativePath": "api/borrowings",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "MidAssignment.Application.Models.Requests.BorrowingRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingController",
    "Method": "GetBorrowings",
    "RelativePath": "api/borrowings",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingController",
    "Method": "UpdateBorrowingStatus",
    "RelativePath": "api/borrowings/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "MidAssignment.Application.Models.Requests.BorrowingUpdateStatusRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingController",
    "Method": "GetBorrowingById",
    "RelativePath": "api/borrowings/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingController",
    "Method": "DeleteBorrowing",
    "RelativePath": "api/borrowings/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.BorrowingController",
    "Method": "GetBorrowingsByRequestorId",
    "RelativePath": "api/borrowings/requestor/{requestorId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestorId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CartController",
    "Method": "CreateAsync",
    "RelativePath": "api/carts",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cart",
        "Type": "MidAssignment.Domain.Entities.Cart",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CartController",
    "Method": "DeleteByBookId",
    "RelativePath": "api/carts/{bookId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CartController",
    "Method": "GetByUserAsync",
    "RelativePath": "api/carts/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CartController",
    "Method": "DeleteAsync",
    "RelativePath": "api/carts/{userId}/{bookId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "bookId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CategoryController",
    "Method": "GetCategories",
    "RelativePath": "api/categories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CategoryController",
    "Method": "CreateCategory",
    "RelativePath": "api/categories",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryRequest",
        "Type": "MidAssignment.Application.Models.Requests.CategoryRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CategoryController",
    "Method": "UpdateCategory",
    "RelativePath": "api/categories/{cateId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cateId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "categoryRequest",
        "Type": "MidAssignment.Application.Models.Requests.CategoryRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CategoryController",
    "Method": "DeleteCategory",
    "RelativePath": "api/categories/{cateId}/{newCateId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cateId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "newCateId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CategoryController",
    "Method": "GetCategory",
    "RelativePath": "api/categories/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CommentController",
    "Method": "CreateComment",
    "RelativePath": "api/comments",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "comment",
        "Type": "MidAssignment.Application.Models.Requests.CommentRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CommentController",
    "Method": "UpdateComment",
    "RelativePath": "api/comments/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "comment",
        "Type": "MidAssignment.Application.Models.Requests.CommentRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CommentController",
    "Method": "DeleteComment",
    "RelativePath": "api/comments/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CommentController",
    "Method": "GetCommentsByBookId",
    "RelativePath": "api/comments/book/{bookId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CommentController",
    "Method": "GetCommentsByUserId",
    "RelativePath": "api/comments/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.CommentController",
    "Method": "GetNewestCommentsByUserId",
    "RelativePath": "api/comments/user/{userId}/newest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.RatingController",
    "Method": "GetRatingsByBookId",
    "RelativePath": "api/ratings/book/{bookId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "api/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/users/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.UserController",
    "Method": "GetUserByEmail",
    "RelativePath": "api/users/email/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.UserController",
    "Method": "InActiveAccount",
    "RelativePath": "api/users/inactive-account/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MidAssignmentProject.API.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/users/update-user/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "MidAssignment.Application.Models.Requests.UserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]